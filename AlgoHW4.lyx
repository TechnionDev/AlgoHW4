#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass extarticle
\begin_preamble
\usepackage{xcolor}
\pagecolor[rgb]{0.15,0.15,0.15} %black
\color[rgb]{1,1,1} %grey

\newfontfamily\mylistingsfont{PT Mono}
\definecolor{lbcolor}{rgb}{0.2,0.2,0.2}  
\end_preamble
\use_default_options true
\begin_modules
linguistics
theorems-std
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1cm
\topmargin 1cm
\rightmargin 1cm
\bottommargin 1.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Algo HW 2
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<row topspace="2cm">
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size huge
Dani Bondar - 206560856
\end_layout

\end_inset
</cell>
</row>
<row topspace="1cm">
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size huge
Gur Telem - 206631848
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part*
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

\end_layout

\end_inset

Q1:
\end_layout

\begin_layout Subparagraph
\begin_inset Flex Structure Tree
status open

\begin_layout Plain Layout
[
\begin_inset Formula ${b,d,f,c,e,a}$
\end_inset

[
\begin_inset Formula ${b,d}$
\end_inset

[b][d]][
\begin_inset Formula ${f,c,e,a}$
\end_inset

[f][
\begin_inset Formula ${c,e,a}$
\end_inset

[c][
\begin_inset Formula ${e,a}$
\end_inset

[e][a]]]]]
\end_layout

\end_inset


\end_layout

\begin_layout Part*
Q2:
\end_layout

\begin_layout Enumerate
True
\end_layout

\begin_layout Enumerate
True
\end_layout

\begin_layout Enumerate
False
\end_layout

\begin_layout Enumerate
False
\end_layout

\begin_layout Enumerate
False
\end_layout

\begin_layout Part*
Q3:
\end_layout

\begin_layout Subsubsection*
Algorithm:
\end_layout

\begin_layout Standard
#Define 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

MaxTimeSegmentAlgorithem
\end_layout

\end_inset

 the algorithm of finding the maximum time segments that was taught in lecture
 8
\end_layout

\begin_layout Enumerate
Set 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

Y
\end_layout

\end_inset

 as an array of segments
\begin_inset Formula 
\[
Y=\left\{ \left(x_{i},x_{i}+1.5\right)\mid x_{i}\in Picture\_array\right\} 
\]

\end_inset

Where each segment represents the location of a guard that stands at location
 
\begin_inset Formula $x_{i}+0.5$
\end_inset


\end_layout

\begin_layout Enumerate
Run the 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

MaxTimeSegmentAlgorithem
\end_layout

\end_inset

, let 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

Y_Res
\end_layout

\end_inset

 be the result segments of the algorithm
\end_layout

\begin_layout Enumerate
Return the location of each guard (where the location is the starting point
 of the segment in 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

Y_Res
\end_layout

\end_inset

 + 
\begin_inset Formula $0.5$
\end_inset

)
\end_layout

\begin_layout Subsection*
Complexity:
\end_layout

\begin_layout Standard
We will run the 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

MaxTimeSegmentAlgorithem
\end_layout

\end_inset

 but the end values of the segments are all ready known from the input 
\begin_inset Formula $x_{i}$
\end_inset

 array - So we don't need to sort the segments.
\end_layout

\begin_layout Standard
This leaves us with a only the 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

n
\end_layout

\end_inset

 iterations, which can be done in a linear time complexity - as was discussed
 in the lecture.
 
\end_layout

\begin_layout Subsection*
Correctness:
\end_layout

\begin_layout Lemma
Given a segment of length L and a starting position 
\begin_inset Formula $x$
\end_inset

, the number of pictures that are being covered is equal to the number of
 pictures that are being covered by a segment of length L and starting position
 
\begin_inset Formula $x_{1}$
\end_inset

where 
\begin_inset Formula $x_{1}$
\end_inset

 is the position of the first picture that is covered by the first segment.
\end_layout

\begin_deeper
\begin_layout Proof
the distance between the first picture 
\begin_inset Formula $x_{1}$
\end_inset

to the last picture that is being covered by the first segment is 
\begin_inset Formula $x_{n}-x_{1}=d$
\end_inset

, and 
\begin_inset Formula $d<L$
\end_inset

.
 because the second segment starting position is 
\begin_inset Formula $x_{1}$
\end_inset

 and 
\begin_inset Formula $d<L$
\end_inset

 the second segment will surely cover all of the 
\begin_inset Formula $n$
\end_inset

 pictures.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
We will need to prove two properties:
\end_layout

\begin_layout Enumerate
All of the pictures are guarded
\end_layout

\begin_layout Enumerate
The placement of the guards is optimal
\end_layout

\begin_layout Proof
1.
\end_layout

\begin_layout Proof
Lets assume in contradiction that there is a picture 
\begin_inset Formula $x_{i}$
\end_inset

 that isn't covered.
 That means that the segment 
\begin_inset Formula $\left(x_{i},x_{i}+1.5\right)$
\end_inset

 is dissected by another segment with finish position 
\begin_inset Formula $y$
\end_inset

 - such that 
\begin_inset Formula $x_{i}\leqslant y\leqslant x_{i}+1.5$
\end_inset

.
\end_layout

\begin_layout Proof
This is in contradiction to the assumption that 
\begin_inset Formula $x_{i}$
\end_inset

 isn't covered.
 
\end_layout

\begin_layout Proof
If there isn't such segment, then from the correctness of the algorithm
 the segment 
\begin_inset Formula $\left(x_{i},x_{i}+1.5\right)$
\end_inset

 will by part of the segment collection at the end of the algorithm.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Proof
2.
\end_layout

\begin_layout Proof
Lets assume in contradiction that there is a picture 
\begin_inset Formula $x_{i}$
\end_inset

 that is covered by two segments (i.e.
 two guards) - 
\begin_inset Formula $\left(y,y+1.5\right)$
\end_inset

 and 
\begin_inset Formula $\left(j,j+1.5\right)$
\end_inset

.
\end_layout

\begin_layout Proof
this means that 
\begin_inset Formula 
\[
y\leq j\leq x_{i}\leq y+1.5\leq j+1.5
\]

\end_inset


\end_layout

\begin_layout Proof
This is in contradiction to the correctness of the algorithm - in the iteration
 when the segment 
\begin_inset Formula $\left(y,y+1.5\right)$
\end_inset

 is in the set, we check if we can add the segment 
\begin_inset Formula $\left(j,j+1.5\right)$
\end_inset

 to the set, but it intersects with the prevues segment.
 
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
In conclusion, from the first and second properties each picture is covered
 only once, and from the lemma - each segment that is being placed covers
 the same number of pictures that any other layout of the segment can produce.
 
\end_layout

\end_body
\end_document
